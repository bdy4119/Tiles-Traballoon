<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="Community">

<select id="communitylist" parameterType="mul.cam.a.dto.CommunityParam"
	resultType="mul.cam.a.dto.CommunityDto">

	select seq, id, ref, step, depth, title, content, wdate, del, readcount
	from
		(select row_number()over(order by ref desc, step asc) as rnum,
			seq, id, ref, step, depth, title, content, wdate, del, readcount
		 from community
		 where 1=1 
		 <if test="choice != null and choice != '' and search != null and search != '' ">
		 	<if test="choice == 'title'">
		 		and title like concat('%', #{search}, '%') and del=0
		 	</if>
		 	<if test="choice == 'content'">
		 		and content like concat('%', #{search}, '%') and del=0
		 	</if>
		 	<if test="choice == 'writer'">
		 		and id=#{search} and del=0
		 	</if>
		 </if>		 
		 order by ref desc, step asc) a
	where rnum between ${start} and ${end}
</select>

<!-- 글의 총수 -->
<select id="getAllCommunity" parameterType="mul.cam.a.dto.CommunityParam" resultType="java.lang.Integer">
	
	select ifnull(count(*), 0)
	from community
	<if test="choice != null and choice != '' and search != null and search != '' ">
	 	<if test="choice == 'title'">
	 		where title like concat('%', #{search}, '%') and del=0
	 	</if>
	 	<if test="choice == 'content'">
	 		where content like concat('%', #{search}, '%') and del=0
	 	</if>
	 	<if test="choice == 'writer'">
	 		where id=#{search} and del=0
	 	</if>
	 </if>
</select>


<!-- 조회수 증가 -->
<update id="comReadcount" parameterType="Integer">
	update community
	set readcount=readcount+1
	where seq=#{seq}
</update>


<!-- 조회수순 정렬 -->
<select id="comReadcountOrder" parameterType="mul.cam.a.dto.CommunityDto"
	resultType="mul.cam.a.dto.CommunityDto">
	select *
	from community
	order by readcount desc
</select>
	
	
<!-- 최신순 정렬 -->
<select id="comWdateOrder" parameterType="mul.cam.a.dto.CommunityDto"
	resultType="mul.cam.a.dto.CommunityDto">
	select *
	from community
	order by wdate desc
</select>
	
	
<!-- 오래된순 정렬 -->
<select id="comLongdateOrder" parameterType="mul.cam.a.dto.CommunityDto"
	resultType="mul.cam.a.dto.CommunityDto">
	select *
	from community
	order by wdate asc
</select>


<insert id="writeCommunity" parameterType="mul.cam.a.dto.CommunityDto">
	insert into community(id, ref, step, depth, title, content, wdate, del, readcount)
	values(#{id}, (select ifnull(max(ref), 0)+1 from community b), 0, 0, 
			#{title}, #{content}, now(), 0, 0)	
</insert>

<select id="getCommunity" parameterType="Integer" resultType="mul.cam.a.dto.CommunityDto">
	select seq, id, ref, step, depth, title, content, wdate, del, readcount
	from community
	where seq=#{seq}
</select>

<update id="updateCommunity" parameterType="mul.cam.a.dto.CommunityDto">
	update community
	set title=#{title}, content=#{content}, wdate=now()
	where seq=#{seq}
</update>


<!-- 글삭제 -->
<!-- reviewDelete -->
<delete id="communitydelete" parameterType="Integer">
	update community
	set del=1
	where seq=#{seq}
</delete>
	
	

<!-- 답글 -->
<!-- 수정 -->
<update id="answerCommunityUpdate" parameterType="mul.cam.a.dto.CommunityDto">
	update community
	set step=step+1
	where ref=(select ref from (select ref from community a where seq=#{seq}) A)
		and step>(select step from (select step from community b where seq=#{seq}) B)
</update>

<!-- 추가 -->
<insert id="answerCommunityInsert" parameterType="mul.cam.a.dto.CommunityDto">
	insert into community(id, ref, step, depth, title, content, wdate, del, readcount)
	values(#{id}, (select ref from community a where seq=#{seq}),
				  (select step from community b where seq=#{seq})+1,
				  (select depth from community c where seq=#{seq})+1,
			#{title}, #{content}, now(), 0, 0)
</insert>


<!-- 댓글 -->
<insert id="commentWrite" parameterType="mul.cam.a.dto.CommunityComment">
	insert into communitycomment(seq, id, content, wdate)
	values(#{seq}, #{id}, #{content}, now())
</insert>

<select id="commentList" parameterType="Integer" resultType="mul.cam.a.dto.CommunityComment">
	select seq, id, content, wdate
	from communitycomment
	where seq=#{seq}
	order by wdate desc
</select>



</mapper>







