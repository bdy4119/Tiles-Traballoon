/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-19 15:03:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hotelScreen;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mul.cam.a.dto.HotelDto;
import java.util.List;

public final class hotel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("mul.cam.a.dto.HotelDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("      <link href=\"https://fonts.googleapis.com/css?family=Nanum+Gothic&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write(" <!-- 5버전 부트스트랩 -> 주석처리하고 hoteltiles 에서 4버전으로 설정해놓음--%>\r\n");
      out.write("   \r\n");
      out.write("		<!-- <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("		     integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\" crossorigin=\"anonymous\">\r\n");
      out.write("		    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\r\n");
      out.write("		    <script type=\"text/javascript\" src=\"./jquery/jquery.twbsPagination.min.js\"></script>  -->\r\n");
      out.write("		\r\n");
      out.write("		    \r\n");
      out.write(" <!-- pagination 추가하면 화면 안 나옴 -->\r\n");
      out.write("		<!--<script type=\"text/javascript\" src=\"./jquery/jquery.twbsPagination.min.js\"></script>  -->\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("	");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        p {\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h3 {\r\n");
      out.write("            font-size: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card-body {\r\n");
      out.write("            height: 145px; /* 원하는 높이값 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a {\r\n");
      out.write("            color: #333; /* 원하는 색상으로 변경 */\r\n");
      out.write("            text-decoration: none; /* 텍스트 밑줄 제거 */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            text-decoration: none; /* 마우스 오버시 텍스트 밑줄 제거 */\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .image-container {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card-img-top {\r\n");
      out.write("            max-width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .image-text h2 {\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("		.pagination a, .pagination span {\r\n");
      out.write("            color: #666; /* 글씨 색상 */\r\n");
      out.write("            background-color: #fff; /* 버튼 색상 */\r\n");
      out.write("            /* 버튼 테두리 색상 */\r\n");
      out.write("        }\r\n");
      out.write("        .pagination a:hover, .pagination span:hover {\r\n");
      out.write("            color: #666; /* 호버 시 글씨 색상 */\r\n");
      out.write("            background-color: #eceef0; /* 호버 시 버튼 색상 */\r\n");
      out.write("            /* 호버 시 버튼 테두리 색상 */\r\n");
      out.write("        }\r\n");
      out.write("        .pagination .page-item.active .page-link {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            background-color: #eceef0;\r\n");
      out.write("            border-color: #dee2e6;\r\n");
      out.write("        }\r\n");
      out.write("        .pagination-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: flex-start;\r\n");
      out.write("            margin: 0px 50px;\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown .btn-primary {\r\n");
      out.write("      	   background-color: gray;\r\n");
      out.write("        }\r\n");
      out.write("        td {\r\n");
      out.write("  		text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.hotelname {\r\n");
      out.write("  		font-size: 15px;\r\n");
      out.write("  		font-family: \"Nanum Gothic\", sans-serif;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<br>\r\n");
      out.write("<!--  상단nav : 부트스트랩 4버전으로 변경 -->\r\n");
      out.write("<div class=\"nav-container\" style=\"width:100%; margin: 0 auto;\">\r\n");
      out.write("	<ul class=\"nav nav-tabs\">\r\n");
      out.write("			  <li class=\"nav-item\">\r\n");
      out.write("			     <a class=\"nav-link active\" href=\"./menu_sudo.do\">수도권</a>\r\n");
      out.write("			  </li>\r\n");
      out.write("			  <li class=\"nav-item\">\r\n");
      out.write("			     <a class=\"nav-link\" href=\"./menu_gwd.do\">강원도</a>\r\n");
      out.write("			  </li>\r\n");
      out.write("			  </li>\r\n");
      out.write("			  <li class=\"nav-item\">\r\n");
      out.write("			    <a class=\"nav-link\" href=\"./menu_gsd.do\">경상도</a>\r\n");
      out.write("			  </li>\r\n");
      out.write("			  <li class=\"nav-item\">\r\n");
      out.write("			    <a class=\"nav-link\" href=\"./menu_jld.do\">전라도</a>\r\n");
      out.write("			  </li>\r\n");
      out.write("			  <li class=\"nav-item\">\r\n");
      out.write("			    <a class=\"nav-link\" href=\"./menu_jeju.do\">제주도</a>\r\n");
      out.write("			  </li>  \r\n");
      out.write("	    <li class=\"nav-item dropdown\">\r\n");
      out.write("	    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">정렬</a>\r\n");
      out.write("	    <div class=\"dropdown-menu\">\r\n");
      out.write("			 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=\">지역순</a>\r\n");
      out.write("	    	 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=1\">인기순</a>\r\n");
      out.write("	    	 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=2\">후기순</a>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </li>\r\n");
      out.write("	  \r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("  $('.dropdown-item').click(function() {\r\n");
      out.write("    var text = $(this).text();\r\n");
      out.write("    $(this).parents('.dropdown').find('.dropdown-toggle').html(text);\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("	    \r\n");
      out.write("	</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 정렬 : 메뉴바로 옮김 -->\r\n");
      out.write("<!-- 	<div class=\"dropdown\" style=\"text-align: right; margin-right: 50px;\">\r\n");
      out.write("  		<button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\r\n");
      out.write("    정렬\r\n");
      out.write("  	</button>\r\n");
      out.write("  		<div class=\"dropdown-menu\">\r\n");
      out.write("    	 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=\">지역순</a>\r\n");
      out.write("    	 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=1\">인기순</a>\r\n");
      out.write("    	 <a class=\"dropdown-item\" href=\"hotel.do?orderBy=2\">후기순</a>\r\n");
      out.write(" 	    </div>\r\n");
      out.write("	</div> -->\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("		");

		//DB의 thumbnail 뿌려주기(총 18개)
		List<HotelDto> list = (List<HotelDto>)request.getAttribute("hotellist");
		
      out.write("\r\n");
      out.write("		<table>\r\n");
      out.write("		");

		for(int i = 0; i< list.size(); i++){
			HotelDto h = list.get(i);
			String thumbnail = h.getThumbnail();
			int seq = h.getSeq();
			String hotelname = h.getHotel_name();
			String brief = h.getBrief();


		
			if(i%3==0){ 	// 0, 1, 2  /  0, 1, 2
		
      out.write(" \r\n");
      out.write("		<tr>\r\n");
      out.write("		");
 	
		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("   			<td>\r\n");
      out.write("				<a href=\"hoteldetail.do?seq=");
      out.print(seq );
      out.write("\">\r\n");
      out.write("					<img src=");
      out.print(thumbnail);
      out.write(" style=\"width:350px; height:350px; border-radius:10px;\"> \r\n");
      out.write("				</a>\r\n");
      out.write("      			<p class=\"hotelname\"> ");
      out.print(hotelname );
      out.write("</p> <!-- 호텔 이름 출력 -->\r\n");
      out.write(" 				");
      out.write("\r\n");
      out.write("			</td>	 \r\n");
      out.write("		\r\n");
      out.write("		");
 	
			if(i%3==2){
			
      out.write(" \r\n");
      out.write("			</tr>\r\n");
      out.write("			");
	
				
			}
		}
		if(list.size()%3!=0){
			
      out.write(" \r\n");
      out.write("			</tr>\r\n");
      out.write("			");

		}
		
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  페이지네이션 시작 -->\r\n");
      out.write(" <br>\r\n");
      out.write("	<div class=\"pagination-container\" style=\"margin-top: 50px;\">\r\n");
      out.write("	      <nav aria-label=\"Page navigation\">\r\n");
      out.write("	          <ul class=\"pagination\" id=\"pagination\" style=\"justify-content:center\"></ul>\r\n");
      out.write("	      </nav>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	    ");

			int page2 = (int) request.getAttribute("page");
			int totalCount = (int) request.getAttribute("totalCount");
			String orderBy = request.getAttribute("orderBy").toString();	//orderBy 받아오기
			int countPage = 9; // 페이지 당 노출 개수 (9개씩 보여주기)
			int totalPage = totalCount / countPage;	//전체 페이지 (데이터 총 개수를 한페이지에 보여줄 개수로 나누기)
	    
	    
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	    $('#pagination').twbsPagination({\r\n");
      out.write("            startPage: ");
      out.print(page2);
      out.write(",\r\n");
      out.write("            totalPages: ");
      out.print(totalPage );
      out.write(",\r\n");
      out.write("            visiblePages: 9,\r\n");
      out.write("            first: '<span srid-hidden=\"true\">«</span>',\r\n");
      out.write("            prev: \"이전\", \r\n");
      out.write("            next: \"다음\",\r\n");
      out.write("            last: '<span srid-hidden=\"true\">»</span>',\r\n");
      out.write("            initiateStartPageClick: false,   // onPageClick 자동실행되지 않도록\r\n");
      out.write("            onPageClick: function (event, page) {\r\n");
      out.write("                // alert(page);\r\n");
      out.write("                location.href = \"?page=\" + page + \"&orderBy=");
      out.print(orderBy);
      out.write("\";\r\n");
      out.write("                //첫번째 매개변수는 ?, 두번째 매개변수는 & 사용해야함.\r\n");
      out.write("                //http://localhost:8090/TraballoonTiles/hotel.do?page=2&orderBy=2\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    </script>\r\n");
      out.write("<!--  </div> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
