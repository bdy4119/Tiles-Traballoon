/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-19 15:06:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.communityScreen;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mul.cam.a.util.Utility;
import mul.cam.a.dto.CommunityDto;
import java.util.List;

public final class communitycontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("mul.cam.a.util.Utility");
    _jspx_imports_classes.add("mul.cam.a.dto.CommunityDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\" src=\"./jquery/jquery.twbsPagination.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        .board-header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-top: 40px; /* 상단 간격 조정 */\r\n");
      out.write("        }\r\n");
      out.write("        .board-sort {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            padding-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .search-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .custom-select {\r\n");
      out.write("            width: 100px;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-control {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-secondary {\r\n");
      out.write("            width: 70px;\r\n");
      out.write("        }\r\n");
      out.write("        a {\r\n");
      out.write("            color: #666; /* 적용할 색상 */\r\n");
      out.write("            text-decoration: none; /* 밑줄 제거 */\r\n");
      out.write("        }\r\n");
      out.write("        td, th {\r\n");
      out.write("            color: #666;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("        .pagination a, .pagination span {\r\n");
      out.write("            color: #666; /* 글씨 색상 */\r\n");
      out.write("            background-color: #fff; /* 버튼 색상 */\r\n");
      out.write("            /* 버튼 테두리 색상 */\r\n");
      out.write("        }\r\n");
      out.write("        .pagination a:hover, .pagination span:hover {\r\n");
      out.write("            color: #666; /* 호버 시 글씨 색상 */\r\n");
      out.write("            background-color: #eceef0; /* 호버 시 버튼 색상 */\r\n");
      out.write("            /* 호버 시 버튼 테두리 색상 */\r\n");
      out.write("        }\r\n");
      out.write("        .pagination .page-item.active .page-link {\r\n");
      out.write("            color: #666;\r\n");
      out.write("            background-color: #eceef0;\r\n");
      out.write("            border-color: #dee2e6;\r\n");
      out.write("        }\r\n");
      out.write("        .pagination-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: flex-start;\r\n");
      out.write("            margin: 0px 50px;\r\n");
      out.write("        }\r\n");
      out.write("        .write-button-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: flex-end;\r\n");
      out.write("        }\r\n");
      out.write("        .button-wrapper .btn {\r\n");
      out.write("            width: 70px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    List<CommunityDto> list = (List<CommunityDto>) request.getAttribute("communitylist");
    int pageCommunity = (Integer) request.getAttribute("pageCommunity");
    int pageNumber = (Integer) request.getAttribute("pageNumber");
    String choice = (String) request.getAttribute("choice");
    String search = (String) request.getAttribute("search");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <img src=\"pageimage/image01.jpg\" class=\"img-fluid\" alt=\"Responsive image\">\r\n");
      out.write("    <div class=\"board-header\">\r\n");
      out.write("        <div class=\"board-sort\" style=\"margin-bottom: -13px;\">\r\n");
      out.write("           <!-- 원하는 순서로 보기 -->\r\n");
      out.write("			<button type=\"button\" value=\"wdate\" onclick=\"location.href='comWdateOrder.do'\" class=\"btn btn-secondary\" style=\"margin-right: 5px; padding-left: 10px; padding-right: 10px;\">최신순</button>\r\n");
      out.write("			<button type=\"button\" value=\"longdate\" onclick=\"location.href='comLongdateOrder.do'\" class=\"btn btn-secondary\" style=\"margin-right: 5px; padding-left: 10px; padding-right: 10px;\">옛날순</button>\r\n");
      out.write("			<button type=\"button\" value=\"readcount\" onclick=\"location.href='comReadcountOrder.do'\" class=\"btn btn-secondary\" style=\"margin-right: 5px; padding-left: 10px; padding-right: 10px;\">조회수</button>\r\n");
      out.write("			<!-- 원하는 순서로 보기 END-->\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"search-container\">\r\n");
      out.write("            <select class=\"custom-select\" id=\"choice\" name=\"choice\">\r\n");
      out.write("                <option selected>검색</option>\r\n");
      out.write("                <option value=\"title\">제목</option>\r\n");
      out.write("                <option value=\"content\">내용</option>\r\n");
      out.write("                <option value=\"writer\">작성자</option>\r\n");
      out.write("            </select>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" onkeyup=\"enterKeyEvent()\"\r\n");
      out.write("                   placeholder=\"검색어\"\r\n");
      out.write("                   value=\"");
      out.print(search );
      out.write("\">\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-secondary\" onclick=\"searchBtn()\">검색</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"table-responsive\">\r\n");
      out.write("        <table class=\"table\" style=\"border-collapse: collapse;\">\r\n");
      out.write("            <thead style=\"background-color: #f8f9fa;\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 8%; text-align: center;\">번호</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 50%\">제목</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 16%; text-align: center;\">조회수</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 16%; text-align: center;\">작성일</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 16%; text-align: center;\">작성자</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("\r\n");
      out.write("            ");

                if (list == null || list.size() == 0) {
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"4\">작성된 글이 없습니다</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

            } else {

                for (int i = 0; i < list.size(); i++) {
                    CommunityDto dto = list.get(i);
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th style=\"text-align: center;\">");
      out.print(i + 1 + (pageNumber * 10) );
      out.write("\r\n");
      out.write("                </th>\r\n");
      out.write("\r\n");
      out.write("                <td>\r\n");
      out.write("                    ");

                        if (dto.getDel() == 0) {
                    
      out.write("\r\n");
      out.write("                    ");
      out.print(Utility.arrow(dto.getDepth()) );
      out.write("\r\n");
      out.write("                    <a href=\"communitydetail.do?seq=");
      out.print(dto.getSeq() );
      out.write("\">\r\n");
      out.write("                        ");
      out.print(dto.getTitle() );
      out.write("\r\n");
      out.write("                    </a>\r\n");
      out.write("                    ");

                    } else if (dto.getDel() == 1) {
                    
      out.write("\r\n");
      out.write("                    ");
      out.print(Utility.arrow(dto.getDepth()) );
      out.write("\r\n");
      out.write("                    <font color=\"#ff0000\">*** 이 글은 작성자에 의해서 삭제되었습니다 ***</font>\r\n");
      out.write("                    ");

                        }
                    
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("\r\n");
      out.write("                <td style=\"text-align: center;\">");
      out.print(dto.getReadcount() );
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("                <td style=\"text-align: center;\">");
      out.print(dto.getWdate() );
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("                <td style=\"text-align: center;\">");
      out.print(dto.getId() );
      out.write("\r\n");
      out.write("                </td>\r\n");
      out.write("\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"pagination-container\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <nav aria-label=\"Page navigation\">\r\n");
      out.write("                <ul class=\"pagination\" id=\"pagination\"></ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"write-button-container\">\r\n");
      out.write("            <div class=\"button-wrapper\" style=\"margin-right: -50px;\">\r\n");
      out.write("                <a href=\"communitywrite.do\" class=\"btn btn-secondary\" style=\"margin-right: 5px; padding-left: 10px; padding-right: 10px;\">글쓰기</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("        let search = \"");
      out.print(search );
      out.write("\";\r\n");
      out.write("        console.log(\"search = \" + search);\r\n");
      out.write("        if (search != \"\") {\r\n");
      out.write("            let obj = document.getElementById(\"choice\");\r\n");
      out.write("            obj.value = \"");
      out.print(choice );
      out.write("\";\r\n");
      out.write("            obj.setAttribute(\"selected\", \"selected\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function enterKeyEvent() {\r\n");
      out.write("            if (window.event.keyCode == 13) {\r\n");
      out.write("                searchBtn();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function searchBtn() {\r\n");
      out.write("            let choice = document.getElementById('choice').value;\r\n");
      out.write("            let search = document.getElementById('search').value;\r\n");
      out.write("\r\n");
      out.write("            location.href = \"community.do?choice=\" + choice + \"&search=\" + search;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $('#pagination').twbsPagination({\r\n");
      out.write("            startPage: ");
      out.print(pageNumber+1 );
      out.write(",\r\n");
      out.write("            totalPages: ");
      out.print(pageCommunity );
      out.write(",\r\n");
      out.write("            visiblePages: 10,\r\n");
      out.write("            first: '<span srid-hidden=\"true\">«</span>',\r\n");
      out.write("            prev: \"이전\",\r\n");
      out.write("            next: \"다음\",\r\n");
      out.write("            last: '<span srid-hidden=\"true\">»</span>',\r\n");
      out.write("            initiateStartPageClick: false,   // onPageClick 자동실행되지 않도록\r\n");
      out.write("            onPageClick: function (event, page) {\r\n");
      out.write("                // alert(page);\r\n");
      out.write("                let choice = document.getElementById('choice').value;\r\n");
      out.write("                let search = document.getElementById('search').value;\r\n");
      out.write("                location.href = \"community.do?choice=\" + choice + \"&search=\" + search + \"&pageNumber=\" + (page - 1);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
